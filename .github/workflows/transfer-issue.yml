
name: Transfer Issues between repositories

on:
  issue_comment:
    types:
      - created

permissions:
    contents: write
    issues: write

jobs:
  transfer:
    if: ${{(!github.event.issue.pull_request && github.event.issue.state != 'closed' && github.actor != 'asyncapi-bot') && (startsWith(github.event.comment.body, '/transfer-issue') || startsWith(github.event.comment.body, '/ti'))}}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Extract Input
        id: extract_step
        run: |
          COMMENT="${{github.event.comment.body}}"
          REPO=$(echo $COMMENT | awk '{print $2}')
          echo repo=$REPO >> $GITHUB_OUTPUT
      - name: Check Repo
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const [owner, repo] = process.env.GITHUB_REPOSITORY
            const repoToMove = process.env.REPO_TO_MOVE
            const issue_number = process.env.ISSUE_NUMBER
            try {
            const {data} = await github.rest.repos.get({
              owner,
              repo: repoToMove
            })
            }catch (e) {
              gtihub.rest.issues.craeteComment({
                owner,
                repo,
                issue_number,
                `${repoToMove} is not a repo under ${owner}. You can only transfer issue to repos that belong to ${owner}`
              })
            }
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          REPO_TO_MOVE: ${{steps.extract_step.outputs.repo}}
          ISSUE_NUMBER: ${{github.event.issue.number}}

      - name: Trasfer Issue
        id: transfer_issue
        working-directory: ./
        run: |
          gh issue transfer ${{github.event.issue.number}} klifu/${{steps.extract_step.outputs.repo}}
        continue-on-error: true
        env:
            GH_TOKEN: ${{ secrets.GOD_TOKEN }}
          